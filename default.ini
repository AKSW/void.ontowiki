enabled     = true
name        = "VoID Helper"
description = "this extension is able to (1) create VoID statements automatically where possible, and (2) suggest additional statements based on a VoiD suggestion-list"
author      = "ISSLOD2011 VoID Team"
templates   = "templates"
languages   = "languages"

modules.voidhelper.priority   = 1
modules.voidhelper.name       = "VoID Helper"
modules.voidhelper.contexts.0 = "main.window.modelinfo"

[private]
categories.automatic.class     = "error"
categories.automatic.text      = "These properties have no value but could be automatically created with create/update: "
categories.recommended.class     = "error"
categories.recommended.text      = "We really recommend to add theses properties: "
categories.nicetohave.class      = "warning"
categories.nicetohave.text       = "We suggest to use these additional properites: "
categories.whereapplicable.class = "info"
categories.whereapplicable.text  = "If applicable, these properties can be useful: "

; automatic category
suggestions.triples.preferred        = 'http://rdfs.org/ns/void#triples';
suggestions.triples.category         = 'automatic'
suggestions.classes.preferred        = 'http://rdfs.org/ns/void#classes';
suggestions.classes.category         = 'automatic'
suggestions.entities.preferred       = 'http://rdfs.org/ns/void#entities';
suggestions.entities.category        = 'automatic'
suggestions.distincto.preferred      = 'http://rdfs.org/ns/void#distinctObjects';
suggestions.distincto.category       = 'automatic'
suggestions.distincts.preferred      = 'http://rdfs.org/ns/void#distinctSubjects';
suggestions.distincts.category       = 'automatic'
suggestions.properties.preferred     = 'http://rdfs.org/ns/void#properties';
suggestions.properties.category      = 'automatic'
suggestions.datadump.preferred       = 'http://rdfs.org/ns/void#dataDump';
suggestions.datadump.category        = 'automatic'
suggestions.sparqlendpoint.preferred = 'http://rdfs.org/ns/void#sparqlEndpoint';
suggestions.sparqlendpoint.category  = 'automatic'

; recommended category
suggestions.title.preferred      = 'http://purl.org/dc/terms/title'
suggestions.title.category       = 'recommended'
suggestions.title.alternatives[] = 'http://purl.org/dc/elements/1.1/title'
suggestions.title.alternatives[] = 'http://www.w3.org/2000/01/rdf-schema#label'

suggestions.license.preferred      = 'http://creativecommons.org/ns#license'
suggestions.license.category       = 'recommended'
suggestions.license.alternatives[] = 'http://purl.org/dc/terms/license'
suggestions.license.alternatives[] = 'http://purl.org/dc/elements/1.1/rights'
suggestions.license.alternatives[] = 'http://vocab.org/waiver/terms/norms'
suggestions.license.alternatives[] = 'http://vocab.org/waiver/terms/waiver'

suggestions.creator.preferred      = 'http://purl.org/dc/terms/creator';
suggestions.creator.category       = 'recommended'
suggestions.creator.alternatives[] = 'http://purl.org/dc/elements/1.1/creator';
suggestions.creator.alternatives[] = 'http://purl.org/dc/terms/contributor';

suggestions.description.preferred      = 'http://purl.org/dc/terms/description'
suggestions.description.category       = 'recommended'
suggestions.description.alternatives[] = 'http://www.w3.org/2000/01/rdf-schema#comment';

suggestions.publisher.preferred = 'http://purl.org/dc/terms/publisher'
suggestions.publisher.category  = 'recommended'

; nicetohave category
suggestions.exampleResource.preferred = 'http://rdfs.org/ns/void#exampleResource'
suggestions.exampleResource.category  = 'nicetohave'

suggestions.subject.preferred      = 'http://purl.org/dc/terms/subject'
suggestions.subject.category       = 'nicetohave'
suggestions.subject.alternatives[] = 'http://xmlns.com/foaf/0.1/primaryTopic'

; whereapplicable category
suggestions.source.preferred = 'http://purl.org/dc/terms/source'
suggestions.source.category  = 'whereapplicable'

suggestions.homepage.preferred = 'http://xmlns.com/foaf/0.1/homepage'
suggestions.homepage.category  = 'whereapplicable'

suggestions.rootResource.preferred = 'http://rdfs.org/ns/void#rootResource'
suggestions.rootResource.category  = 'whereapplicable'


