<?php
/**
 * This file is part of the {@link http://ontowiki.net OntoWiki} project.
 *
 * @copyright Copyright (c) 2011, {@link http://aksw.org AKSW}
 * @license http://opensource.org/licenses/gpl-license.php GNU General Public License (GPL)
 */

/**
 * OntoWiki VoID module â€“ VoID Helper template
 */
?>
<script type="text/javascript">
$(document).ready(function() {
    var voidUrl  = urlBase + 'void/';

    // this is the callback for the creation ajax call which outputs a success
    // message only
    function renderCleaning(jsonData) {
        $('#results').removeClass('is-processing')
        $('#results').empty().hide();
        if (jsonData == "success") {
            content = '<p class="messagebox success">VoiD description successfully removed.';
        } else {
            content = '<p class="messagebox error">Could not remove the VoiD description.';
        }
        $('#results').append(content).slideDown();
    }

    // this is the callback for the creation ajax call which outputs a success
    // message only
    function renderCreation(jsonData) {
        $('#results').removeClass('is-processing')
        $('#results').empty().hide();
        if (jsonData == "success") {
            content = '<p class="messagebox success">VoiD description successfully created.';
        } else {
            content = '<p class="messagebox error">Could not create the VoiD description.';
        }
        $('#results').append(content).slideDown();
    }

    // this is the callback for the suggest ajax call which outputs the
    // different categories
    function renderSuggestions(jsonData) {
        $('#results').removeClass('is-processing')
        $('#results').empty().hide();
        var content = '';
        var categories  = jsonData.categories;
        var suggestions = jsonData.suggestions;

        // test for message part and output it as success
        if(typeof jsonData.message != "undefined") {
            content += '<p class="messagebox success">' + jsonData.message + '</p>';
        }

        // go through property categories
        jQuery.each(suggestions, function(categoryName, properties) {
            var categoryClass = categories[categoryName].class;
            var categoryText  = categories[categoryName].text;
            content += '<p class="messagebox '+ categoryClass +'">' + categoryText + '<br/> ';
            // go through properties
            jQuery.each(properties, function() {
                content += '&rarr;&nbsp;<a title="'+ this.uri +'" href="'+ this.url +'">' + this.label + '</a> ';
            });
            content += '</p>';
        });
        $('#results').append(content).slideDown();
    }

    $('#void-suggest').click(function () {
        $('#results').addClass('is-processing')
        $.getJSON(voidUrl+'suggest', function(jsonData) {renderSuggestions(jsonData); });
    });
    $('#void-create').click(function () {
        $('#results').addClass('is-processing')
        $.getJSON(voidUrl+'create', function(jsonData) {renderCreation(jsonData); });
    });
    $('#void-clean').click(function () {
        $('#results').addClass('is-processing')
        $.getJSON(voidUrl+'clean', function(jsonData) {renderCleaning(jsonData); });
    });
});
</script>
<p class="messagebox info">Your knowledge base could be served as <a href="http://en.wikipedia.org/wiki/Linked_Data">Linked Data</a> and a valid <a href="http://www.w3.org/TR/void/">VoID description</a> fosters the consumption of your knowledge base.
</p>
<p>
<a id="void-create"  class="minibutton">Create / Update</a>
<a id="void-suggest" class="minibutton">Suggest</a>
<a id="void-clean" class="minibutton">Clean</a>
</p>
<div id="results">
</div>
